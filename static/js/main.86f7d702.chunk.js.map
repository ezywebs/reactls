{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Navigation/index.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignUp/index.js","components/SignIn/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","HOME","Navigation","react_default","a","createElement","className","Link","to","ROUTES","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","then","authUser","setState","objectSpread","history","push","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","type","placeholder","disabled","message","SignUpLink","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","App","BrowserRouter","components_Navigation","Route","exact","path","component","LandingPage","PasswordForgetPage","HomePage","AccountPage","AdminPage","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86f7d702.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n  <div className=\"ui large menu\">\n    <Link to={ROUTES.SIGN_IN} className=\"active item\">Home</Link>\n    <Link to={ROUTES.LANDING} className=\"item\">Landing</Link>\n    <Link to={ROUTES.HOME} className=\"item\">Home</Link>\n    <Link to={ROUTES.ACCOUNT} className=\"item\">Account</Link>\n    <Link to={ROUTES.ADMIN} className=\"item\">Admin</Link>\n    <div className=\"right menu\">\n        <Link to={ROUTES.SIGN_UP} className=\"item\">Sign Up</Link>\n    </div>\n  </div>\n);\n\nexport default Navigation;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\n// const config = {\n//   apiKey: \"AIzaSyCY4oTQMcFHofcjbQn9DqhLBoXt_6hJP14\",\n//   authDomain: \"fir-cd7b4.firebaseapp.com\",\n//   databaseURL: \"https://fir-cd7b4.firebaseio.com\",\n//   projectId: \"fir-cd7b4\",\n//   storageBucket: \"fir-cd7b4.appspot.com\",\n//   messagingSenderId: \"910290729574\",\n// };\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    \n    this.auth = app.auth();\n  }\n  \n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n  \n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n    \n  doSignOut = () => this.auth.signOut();\n  \n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n    \n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n    \n    return (\n      <form onSubmit={this.onSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>User Name</label>\n          <input\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Full Name\"\n          />\n        </div>\n        <div className=\"field\">\n          <label>Email</label>\n          <input\n            name=\"email\"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n        </div>\n        <div className=\"field\">\n          <label>Password</label>\n          <input\n            name=\"passwordOne\"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"field\">\n          <label>Confirm Password</label>\n          <input\n            name=\"passwordTwo\"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n        </div>\n        <button disabled={isInvalid} type=\"submit\" className=\"ui button\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP} className=\"item\">Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n        <form onSubmit={this.onSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n          </div>\n          <div className=\"field\">\n            <input\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n          <button disabled={isInvalid} type=\"submit\" className=\"ui button\">\n            Sign In\n          </button>\n  \n          {error && <p>{error.message}</p>}\n        </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport { LandingPage } from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport { PasswordForgetPage } from '../PasswordForget';\nimport { HomePage } from '../Home';\nimport { AccountPage } from '../Account';\nimport { AdminPage } from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n      <div className=\"ui text container\">\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\n        <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n        <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n        <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n        <Route path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n        <Route path={ROUTES.ADMIN} component={AdminPage} />\n      </div>\n    </div>\n  </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}